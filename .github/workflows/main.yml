name: ci-checks

on: [pull_request]

jobs:
  backend:

    name: backend
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]

    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: bmds-online
          POSTGRES_PASSWORD: password
          POSTGRES_DB: bmds-online-test
        ports:
        # will assign a random free host port
        - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.6'
        architecture: 'x64'
    - name: install
      run: |
        pip install -r requirements/dev.txt
    - name: lint
      run: |
        make lint-py
    - name: test
      env:
        DJANGO_DB_HOST: postgres
        DJANGO_DB_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
        DJANGO_DB_USER: bmds-online
        DJANGO_DB_PW: password
        DJANGO_DB_NAME: bmds-online-test
        BMDS_REQUEST_URL: ${{ secrets.BMDS_REQUEST_URL }}
        BMDS_TOKEN: ${{ secrets.BMDS_TOKEN }}
      run: |
        make test

  frontend:
    name: frontend
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: install
      run: |
        npm install -g yarn
        yarn --cwd ./frontend install
    - name: lint
      run: |
        make lint-js

  integration:
    name: integration
    runs-on: ubuntu-18.04

    container:
      image: nikolaik/python-nodejs:python3.6-nodejs12
      options: --network-alias container

    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: bmds-online
          POSTGRES_PASSWORD: password
          POSTGRES_DB: bmds-online-test
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      selenium-server:
        # ERR_INSUFFICIENT_RESOURCES is raised if Chrome is used,
        # so we use Firefox instead. Chrome can only handle so many
        # async requests, and since the developmental webpack does not
        # take into consideration these restrictions and  it isn't being
        # served locally, there are errors.
        # Similar issue with relevant answer:
        # https://community.atlassian.com/t5/Jira-questions/Im-getting-Failed-to-load-resource-net-ERR-INSUFFICIENT/qaq-p/1153027
        # Developmental webpack:
        # https://webpack.js.org/configuration/mode/#mode-development
        image: selenium/standalone-firefox:latest
        ports:
        - 4444:4444

    env:
      DJANGO_DB_HOST: localhost
      DJANGO_DB_PORT: 5432
      DJANGO_DB_USER: bmds-online
      DJANGO_DB_PW: password
      DJANGO_DB_NAME: bmds-online-test
      BMDS_INTEGRATION_TESTS: 1
      BROWSER: firefox
      LIVESERVER_HOST: container
      LIVESERVER_PORT: 8000
      PUBMED_API_KEY: ${{ secrets.PUBMED_API_KEY }}
      SELENIUM_HOST: selenium-server
      SELENIUM_PORT: 4444

    steps:
    - uses: actions/checkout@v1
    - name: install python requirements
      run: |
        pip install -r requirements/dev.txt
    - name: setup web server
      run: |
        yarn --cwd ./frontend install
        npm run --prefix ./frontend start &
    - name: run integration tests
      run: |
        py.test -s tests/integration/
